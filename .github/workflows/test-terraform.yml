name: 'Terraform'
on:
  workflow_dispatch:
    inputs:
      TFAction:
        description: "Terraform Action- Apply or Destroy"     
        required: true
        default: "apply"
permissions:
  contents: read
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_NAME }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_SECRET_KEY }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUSCRIPTION }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT }}
      TerraformBackendStorageAccount: githubactionsjorge
      TerraformBackendResourceGroup: devops-test
      TerraformBackendStorageContainer: test
      ARM_SKIP_PROVIDER_REGISTRATION: "true"    
      
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    - name: Terraform Init
      run:  |
        cd ./terraform
        ls
        terraform init -backend-config=storage_account_name=$TerraformBackendStorageAccount -backend-config=container_name=$TerraformBackendStorageContainer -backend-config=key=dev.tfstate -backend-config=resource_group_name=$TerraformBackendResourceGroup -backend-config=subscription_id="$ARM_SUBSCRIPTION_ID" -backend-config=tenant_id="$ARM_TENANT_ID" -backend-config=client_id="$ARM_CLIENT_ID" -backend-config=client_secret="$ARM_CLIENT_SECRET"
    - name: Terraform Plan
      run:  |
        cd ./terraform
        terraform plan -out=plan.tf 
    - name: Terraform Apply
      if: ${{ inputs.TFAction == 'apply'}}  
      run: terraform apply -input=false -auto-approve plan.tf
    - name: Terraform Destroy
      if: ${{ inputs.TFAction == 'destroy' }} 
      run: terraform destroy -input=false -auto-approve